snippet php
	<?php
	/**
	 * ${1:A short description of what this file does.}
	 *
	 * @package ${2:Packagename}
	 * @subpackage ${3:Subpackage}
	 * @copyright `strftime('%Y')` ${4:Hotels.nl}
	 */

	${5}
snippet /*
	/**
	 * ${1}
	 */
snippet def
	/**
	 * ${3:undocumented constant}
	 */
	define(${1}, ${2});

	${4}
snippet var
	/**
	 * ${4:Variable description}
	 *
	 * @var ${2:type} $${3:varname}
	 */
	${1:private|public|protected} $$3${5: = initial value};

	${6}
snippet const
	/**
	 * ${3:Const description}
	 *
	 * @const ${1:type} ${2:varname}
	 */
	const $2 = ${4:initial value};

	${5}
snippet class
	/**
	 * ${3:undocumented class}
	 */
	${1:abstract }class ${2:}
	{
	    ${4}
	}
snippet fun
	/**
	 * ${4:undocumented function}
	 * ${5}
	 * @return ${6:void}
	 */
	${1:visibility}function ${2:}(${3})
	{
	    ${7}
	}
snippet def?
	${1}defined('${2}')${3}
snippet while
	while (${1:/* condition */}) {
	    ${2:// code...}
	}
snippet dow
	do {
	    ${2:// code... }
	} while (${1:condition});
snippet if
	if (${1:condition}) {
	    ${2:// code...}
	}
snippet ife
	if (${1:condition}) {
	    ${2:// code...}
	} else {
	    ${3:// code...}
	}
	${4}
snippet else
	else {
	    ${1:// code...}
	}
snippet elseif
	elseif (${1:condition}) {
	    ${2:// code...}
	}
snippet switch
	switch ($${1:variable}) {
	    case '${2:value}':
	        ${3}
	        break;

	    ${5}
	    default:
	        ${4}
	        break;
	}
snippet case
	case '${1:value}':
	    ${2}
	    break;${3}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
	    ${3}
	}
snippet array
	$${1:arrayName} = array(
	    '${2}' => ${3},${4}
	);

	${5}
snippet in_array
	in_array(${1:needle}, ${2:haystack}${3:, strict})${4}
snippet inc
	include${1:_once} '${2:file}.php';
	${3}
snippet req
	require${1:_once} '${2:file}.php';
	${3}
snippet strpos
	strpos(${1:haystack}, ${2:needle}${3:, offset})${4}
snippet stripos
	stripos(${1:haystack}, ${2:needle}${3:, offset})${4}
snippet substr
	substr(${1:string}, ${2:start}${3:, length})${4}
snippet str_replace
	str_replace(${1:search}, ${2:replace}, ${3:subject}${4:, count})${5}
snippet number_format
	number_format(${1:number}, ${2:decimals}, ${3:dec_point}, ${4:thousands_sep})${5}
snippet Input get
	Input::get(${1:key});${2}
snippet Input post
	Input::post(${1:key});${2}
snippet Input request
	Input::request(${1:key});${2}
snippet Input files
	Input::files(${1:key});${2}
snippet Input cookie
	Input::cookie(${1:key});${2}
snippet form
	<?= Html::form(${1:action}, ${2:'post'}${3:, $extra}${4:, $hidden}) ?>${5}
# Getter and setter
snippet getset
	/**
	 * Get $1.
	 *
	 * @return ${2:type}
	 */
	public function $1()
	{
	    return $this->data['${1:variable}'];
	}

	/**
	 * Set $1.
	 *
	 * @param $2 $value New value.
	 * @return `Filename()` $this
	 */
	public function set${3:$1}(${4:$2 }$value)
	{
	    $this->data['$1'] = $value;
	}

	${5}
